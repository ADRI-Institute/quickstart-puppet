{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Step 3 of 3: Create the Amazon EC2 instances for the Puppet Quick Start.",
    "Parameters"               : {
        "KeyPairName" : {
            "Description" : "Public/private key pair",
            "Type"        : "AWS::EC2::KeyPair::KeyName"
        },
        "SubnetId"    : {
            "Description" : "VPC subnet ID for EC2 Instances",
            "Type"        : "AWS::EC2::Subnet::Id"
        },
        "VPC"         : {
            "Description" : "VPC ID",
            "Type"        : "AWS::EC2::VPC::Id"
        },
        "RemoteAdminCIDR" : {
            "Description" : "CIDR block or IP for SSH and RDP access",
            "Type"        : "String",
            "Default"     : "0.0.0.0/0",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        },
        "PuppetMasterIP"  : {
            "Description" : "IP for the Puppet master",
            "Type"        : "String",
            "Default"     : "10.0.0.10"
        },
        "PuppetAgentLinuxIP" : {
            "Description" : "IP for the Puppet agent",
            "Type"        : "String",
            "Default"     : "10.0.0.11"
        },
        "PuppetAgentWindowsIP" : {
            "Description" : "IP for the Puppet agent",
            "Type"        : "String",
            "Default"     : "10.0.0.12"
        },
        "VPCCIDR"              : {
            "Description" : "CIDR block for the VPC",
            "Type"        : "String",
            "Default"     : "10.0.0.0/16",
            "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
        }
    },
    "Mappings"                 : {
        "Ubuntu1404AMI" : {
            "us-east-1" : {
                "64" : "ami-d05e75b8"
            },
            "us-west-2" : {
                "64" : "ami-5189a661"
            },
            "us-west-1" : {
                "64" : "ami-df6a8b9b"
            },
            "eu-west-1" : {
                "64" : "ami-47a23a30"
            },
            "eu-central-1" : {
                "64" : "ami-accff2b1"
            },
            "ap-southeast-1" : {
                "64" : "ami-96f1c1c4"
            },
            "ap-northeast-1" : {
                "64" : "ami-936d9d93"
            },
            "ap-northeast-2" : {
                "64" : "ami-86ae60e8"
            },
            "sa-east-1"      : {
                "64" : "ami-4d883350"
            },
            "ap-southeast-2" : {
                "64" : "ami-69631053"
            }
        },
        "AWSWinRegionMap": {
            "ap-northeast-1": {
                "WS2012R2": "ami-ff435e91"
            },
            "ap-northeast-2": {
                "WS2012R2": "ami-c6de16a8"
            },
            "ap-southeast-1": {
                "WS2012R2": "ami-63489d00"
            },
            "ap-southeast-2": {
                "WS2012R2": "ami-a1f7d5c2"
            },
            "eu-central-1": {
                "WS2012R2": "ami-3acf2f55"
            },
            "eu-west-1": {
                "WS2012R2": "ami-9ebb39ed"
            },
            "sa-east-1": {
                "WS2012R2": "ami-6efd7302"
            },
            "us-east-1": {
                "WS2012R2": "ami-c8a9baa2"
            },
            "us-west-1": {
                "WS2012R2": "ami-032f5063"
            },
            "us-west-2": {
                "WS2012R2": "ami-87c037e7"
            }
        }
    },
    "Resources"                : {
        "PuppetMaster" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "Ubuntu1404AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        "64"
                    ]
                },
                "InstanceType" : "t2.medium",
                "NetworkInterfaces" : [
                    {
                        "DeleteOnTermination" : "true",
                        "DeviceIndex"         : 0,
                        "SubnetId"            : {
                            "Ref" : "SubnetId"
                        },
                        "PrivateIpAddresses"  : [
                            {
                                "Primary" : "true",
                                "PrivateIpAddress" : {
                                    "Ref" : "PuppetMasterIP"
                                }
                            }
                        ],
                        "GroupSet"            : [
                            {
                                "Ref" : "PuppetMasterSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Name",
                        "Value" : "Puppet"
                    }
                ],
                "BlockDeviceMappings" : [
                    {
                        "DeviceName" : "/dev/sda1",
                        "Ebs"        : {
                            "VolumeSize" : "50",
                            "VolumeType" : "gp2"
                        }
                    }
                ],
                "KeyName"             : {
                    "Ref" : "KeyPairName"
                },
                "UserData"            : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash\n",
                                "hostname puppet.example.com",
                                "\n",
								"wget https://apt.puppetlabs.com/puppetlabs-release-trusty.deb -O /tmp/puppetlabs-release-trusty.deb",
                                "\n",
								"dpkg -i /tmp/puppetlabs-release-trusty.deb",
                                "\n",
                                "apt-get update",
                                "\n",
                                "apt-get install puppetmaster-passenger -y",
                                "\n",
								"sed --in-place '/templatedir/ d' /etc/puppet/puppet.conf",
                                "\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/puppet/latest/scripts/autosign.conf -O /etc/puppet/autosign.conf",
                                "\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/puppet/latest/scripts/site.pp -O /etc/puppet/manifests/site.pp",
                                "\n",
                                "mkdir -p /etc/puppet/modules/lampserver/manifests",
                                "\n",
                                "mkdir -p /etc/puppet/modules/iisserver/manifests",
                                "\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/puppet/latest/scripts/lampserver/init.pp -O /etc/puppet/modules/lampserver/manifests/init.pp",
                                "\n",
                                "wget https://s3.amazonaws.com/quickstart-reference/puppet/latest/scripts/iisserver/init.pp -O /etc/puppet/modules/iisserver/manifests/init.pp",
								"\n",
								"puppet module install puppetlabs-powershell",
								"\n",
								"puppet module install puppet-windowsfeature"
                            ]
                        ]
                    }
                }
            }
        },
        "LinuxAgent"   : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "PuppetMaster",
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "Ubuntu1404AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        "64"
                    ]
                },
                "InstanceType" : "t2.medium",
                "NetworkInterfaces" : [
                    {
                        "DeleteOnTermination" : "true",
                        "DeviceIndex"         : 0,
                        "SubnetId"            : {
                            "Ref" : "SubnetId"
                        },
                        "PrivateIpAddresses"  : [
                            {
                                "Primary" : "true",
                                "PrivateIpAddress" : {
                                    "Ref" : "PuppetAgentLinuxIP"
                                }
                            }
                        ],
                        "GroupSet"            : [
                            {
                                "Ref" : "PuppetAgentLinuxSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags"              : [
                    {
                        "Key" : "Name",
                        "Value" : "LinuxAgent"
                    }
                ],
                "KeyName"           : {
                    "Ref" : "KeyPairName"
                },
                "UserData"          : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash\n",
                                "hostname linuxagent.example.com",
                                "\n",
                                "apt-get update",
                                "\n",
                                "apt-get install puppet -y",
                                "\n",
                                "sed -i '/main/aserver=puppet.example.com' /etc/puppet/puppet.conf",
                                "\n",
                                "puppet agent --test --verbose",
                                "\n",
                                "puppet agent --enable"
                            ]
                        ]
                    }
                }
            }
        },
        "WindowsAgent" : {
            "Type" : "AWS::EC2::Instance",
            "DependsOn" : "PuppetMaster",
            "Metadata"  : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "config" : [
                            "setup"
                        ]
                    },
                    "setup"      : {
                        "files" : {
                            "c:\\cfn\\cfn-hup.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref" : "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WindowsAgent.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref" : "AWS::StackId"
                                            },
                                            " -r WindowsAgent",
                                            " --region ",
                                            {
                                                "Ref" : "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\Unzip-Archive.ps1"      : {
                                "source" : "https://s3.amazonaws.com/quickstart-reference/microsoft/utilities/latest/scripts/Unzip-Archive.ps1"
                            },
                            "c:\\cfn\\modules\\AWSQuickStart.zip"      : {
                                "source" : "https://s3.amazonaws.com/quickstart-reference/microsoft/utilities/latest/modules/AWSQuickStart.zip"
                            },
                            "c:\\cfn\\downloads\\puppet-latest.msi"    : {
                                "source" : "https://downloads.puppetlabs.com/windows/puppet-latest.msi"
                            },
                            "c:\\cfn\\scripts\\New-LocalAdministrator.ps1" : {
                                "source" : "https://s3.amazonaws.com/quickstart-reference/microsoft/utilities/latest/scripts/New-LocalAdministrator.ps1"
                            },
                            "c:\\cfn\\downloads\\Win8.1AndW2K12R2-KB3134758-x64.msu" : {
                                "source" : "https://download.microsoft.com/download/2/C/6/2C6E1B4A-EBE5-48A6-B225-2D2058A9CEFB/Win8.1AndW2K12R2-KB3134758-x64.msu"
                            },
                            "c:\\cfn\\scripts\\Set-PrimaryDnsSuffix.ps1"             : {
                                "source" : "https://s3.amazonaws.com/quickstart-reference/microsoft/exchange/latest/scripts/Set-PrimaryDnsSuffix.ps1"
                            },
                            "c:\\cfn\\downloads\\GeoTrust_Global_CA.pem"             : {
                                "source" : "https://www.geotrust.com/resources/root_certificates/certificates/GeoTrust_Global_CA.pem"
                            },
                            "c:\\cfn\\scripts\\PuppetAgentWindowsInit.bat"             : {
                                "source" : "https://s3.amazonaws.com/quickstart-reference/puppet/latest/scripts/iisserver/PuppetAgentWindowsInit.bat"
                            }
                        },
                        "commands" : {
                            "a-set-execution-policy" : {
                                "command" : "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force",
                                "waitAfterCompletion" : "0"
                            },
                            "b-unpack-quickstart-module" : {
                                "command" : "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion" : "0"
                            },
                            "c-init-quickstart-module"   : {
                                "command" : {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartResourceSignal -Stack '",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "' -Resource 'WindowsAgent' -Region '",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "0"
                            },
                            "d-install-puppet-agent"     : {
                                "command" : "powershell.exe -command Start-Process msiexec.exe '/qn /norestart /i C:\\cfn\\downloads\\puppet-latest.msi PUPPET_MASTER_SERVER=puppet.example.com' -NoNewWindow -Wait",
                                "waitAfterCompletion" : "0"
                            },
                            "e-execute-powershell-script-RenameComputer" : {
                                "command" : "powershell.exe -Command Rename-Computer -NewName windowsagent -Restart",
                                "waitAfterCompletion" : "forever"
                            },
                            "f-execute-powershell-script-SetDnsSuffix"   : {
                                "command" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "powershell.exe -command c:\\cfn\\scripts\\Set-PrimaryDnsSuffix.ps1 -Suffix 'example.com'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion" : "forever"
                            },
                            "g-send-signal"                              : {
                                "command" : "c:\\cfn\\scripts\\PuppetAgentWindowsInit.bat",
                                "waitAfterCompletion" : "0"
                            },
                            "h-send-signal"                              : {
                                "command" : "powershell.exe -command Write-AWSQuickStartStatus",
                                "waitAfterCompletion" : "0"
                            }
                        },
                        "services" : {
                            "windows" : {
                                "cfn-hup" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files"         : [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSWinRegionMap",
                        {
                            "Ref" : "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType" : "t2.medium",
                "SubnetId"     : {
                    "Ref" : "SubnetId"
                },
                "Tags"         : [
                    {
                        "Key" : "Name",
                        "Value" : "WindowsAgent"
                    }
                ],
                "BlockDeviceMappings" : [
                    {
                        "DeviceName" : "/dev/sda1",
                        "Ebs"        : {
                            "VolumeSize" : "50",
                            "VolumeType" : "gp2"
                        }
                    }
                ],
                "SecurityGroupIds"    : [
                    {
                        "Ref" : "PuppetAgentWindowsSecurityGroup"
                    }
                ],
                "KeyName"             : {
                    "Ref" : "KeyPairName"
                },
                "UserData"            : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref" : "AWS::StackId"
                                },
                                " -r WindowsAgent",
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                }
            },
            "CreationPolicy" : {
                "ResourceSignal" : {
                    "Count" : "1",
                    "Timeout" : "PT30M"
                }
            }
        },
        "PuppetMasterSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enables access to the Puppet master",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : {
                            "Ref" : "RemoteAdminCIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : {
                            "Ref" : "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "8140",
                        "ToPort"     : "8140",
                        "CidrIp"     : {
                            "Ref" : "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : {
                            "Ref" : "VPCCIDR"
                        }
                    }
                ]
            }
        },
        "PuppetAgentLinuxSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enables access to the puppet agent",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : {
                            "Ref" : "RemoteAdminCIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : {
                            "Ref" : "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : {
                            "Ref" : "RemoteAdminCIDR"
                        }
                    }
                ]
            }
        },
        "PuppetAgentWindowsSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enables access to the puppet agent",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "RemoteAdminCIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "3389",
                        "ToPort"     : "3389",
                        "CidrIp"     : {
                            "Ref" : "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : {
                            "Ref" : "RemoteAdminCIDR"
                        }
                    }
                ]
            }
        }
    },
    "Outputs"                  : {
        "PuppetMasterDnsName" : {
            "Value" : {
                "Fn::GetAtt" : [
                    "PuppetMaster",
                    "PublicDnsName"
                ]
            },
            "Description" : "Public DNS Name for the Puppet Server"
        },
        "PuppetAgentLinuxDnsName" : {
            "Value" : {
                "Fn::GetAtt" : [
                    "LinuxAgent",
                    "PublicDnsName"
                ]
            },
            "Description" : "Public DNS Name for the Puppet Linux agent"
        },
        "PuppetAgentWindowsDnsName" : {
            "Value" : {
                "Fn::GetAtt" : [
                    "WindowsAgent",
                    "PublicDnsName"
                ]
            },
            "Description" : "Public DNS Name for the Puppet Windows agent"
        }
    }
}
